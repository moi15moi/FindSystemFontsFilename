name: Run Tests

on:
  push:
    branches:
      - 'main'
  pull_request:

jobs:
  run-tests:
    name: "Test (${{matrix.os}}, Python ${{ matrix.python-version }}, ${{ matrix.architecture }})"
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm, macos-latest, macos-13, windows-latest, windows-11-arm]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
        architecture: [x64, x86, arm64]
        exclude:
          - os: ubuntu-latest
            architecture: x86
          - os: ubuntu-latest
            architecture: arm64
          - os: ubuntu-24.04-arm
            architecture: x86
          - os: ubuntu-24.04-arm
            architecture: x64
          - os: macos-latest
            architecture: x86
          - os: macos-latest
            architecture: x64
          - os: macos-13
            architecture: x86
          - os: macos-13
            architecture: arm64
          - os: windows-latest
            architecture: arm64
          - os: windows-11-arm
            architecture: x64
          - os: windows-11-arm
            architecture: x86
          - os: windows-11-arm
            architecture: arm64
            python-version: "3.8"
          - os: windows-11-arm
            architecture: arm64
            python-version: "3.9"
          - os: windows-11-arm
            architecture: arm64
            python-version: "3.10"

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.architecture }}

    - name: Install Python requirements
      run: pip install --upgrade --upgrade-strategy eager .[dev]

    - name: Run tests
      run: pytest

    - name: Generate coverage report
      run: |
        coverage run -m pytest
        coverage xml

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}
